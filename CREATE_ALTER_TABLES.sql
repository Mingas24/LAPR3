--delimiter /
DROP TABLE vehicle          CASCADE CONSTRAINTS PURGE/
DROP TABLE registered_users CASCADE CONSTRAINTS PURGE/
DROP TABLE invoice          CASCADE CONSTRAINTS PURGE/
DROP TABLE park             CASCADE CONSTRAINTS PURGE/
DROP TABLE trip             CASCADE CONSTRAINTS PURGE/
DROP TABLE scooter          CASCADE CONSTRAINTS PURGE/
DROP TABLE bicycle          CASCADE CONSTRAINTS PURGE/
DROP TABLE pois             CASCADE CONSTRAINTS PURGE/
DROP TABLE paths            CASCADE CONSTRAINTS PURGE/
DROP TABLE locations        CASCADE CONSTRAINTS PURGE/

CREATE TABLE vehicle (
    vehicle_id                  VARCHAR(100)            CONSTRAINT pk_vehicle_vehicle_id            PRIMARY KEY,
    park_id                     VARCHAR(100),
    vehicle_status              VARCHAR(100)            CONSTRAINT ck_vehicle_vehicle_status        CHECK (REGEXP_LIKE(vehicle_status, 'AVAILABLE || UNAVAILABLE') ),
    weight                      INTEGER                 CONSTRAINT nn_vehicle_weight                NOT NULL,
    aerodynamic_coef            NUMBER(5,2)             CONSTRAINT nn_vehicle_aerodynamic_coef      NOT NULL,
                                                        CONSTRAINT ck_vehicle_aerodynamic_coef      CHECK (aerodynamic_coef >= 0.9 and aerodynamic_coef <= 1.1),
    frontal_area                NUMBER(12,10)             CONSTRAINT nn_vehicle_frontal_area          NOT NULL
)/

CREATE TABLE locations(
    id_location                 VARCHAR(100)            CONSTRAINT pk_locations_id_location         PRIMARY KEY,
    location_description        VARCHAR(100)            CONSTRAINT nn_locations_name_location       NOT NULL,
    lat                         NUMBER(10,6)            CONSTRAINT nn_locations_lat                 NOT NULL,
                                                        CONSTRAINT ck_locations_lat                 CHECK(lat >=-90 and lat <= 90),
    longi                       NUMBER(10,6)            CONSTRAINT nn_locations_longi               NOT NULL,
                                                        CONSTRAINT ck_locations_longi               CHECK(longi >=-180 and longi <= 180),
    elevation                   INTEGER                 CONSTRAINT nn_locations_elevation           NOT NULL
)/

CREATE TABLE registered_users(
    username                    VARCHAR(100)        CONSTRAINT pk_registered_users_username              PRIMARY KEY,
    email                       VARCHAR(100)        CONSTRAINT nn_registered_users_email                 NOT NULL,
    gender                      VARCHAR(20)         CONSTRAINT nn_registered_users_gender                NOT NULL,
    height                      INTEGER             CONSTRAINT nn_registered_users_height                NOT NULL,
    weight                      INTEGER             CONSTRAINT nn_registered_users_weight                NOT NULL,
    cyclingAverageSpeed         NUMBER(4,2)         CONSTRAINT nn_registered_users_cyclingAverageSpeed   NOT NULL,
    visa                        INTEGER             CONSTRAINT nn_registered_users_visa                  NOT NULL,
    pwd                         VARCHAR(100)        CONSTRAINT nn_registered_users_pwd                   NOT NULL,
    points                      INTEGER
)/

CREATE TABLE invoice(
    username                    VARCHAR(100)        CONSTRAINT nn_invoice_user_client_id                NOT NULL,
    invoice_date                TIMESTAMP           CONSTRAINT nn_invoice_invoice_date                  NOT NULL,
    monthly_cost                NUMBER(8, 2),
    initial_points              INTEGER,
    earned_points               INTEGER,
    CONSTRAINT pk_invoice PRIMARY KEY (username, invoice_date)
)/


CREATE TABLE park (
    park_id                     VARCHAR(100)        CONSTRAINT pk_park_park_id                  PRIMARY KEY,
    park_description            VARCHAR(100)        CONSTRAINT nn_park_park_description         NOT NULL,
    lat_park                    NUMBER(10,6)        CONSTRAINT nn_park_lat_park                 NOT NULL,
                                                    CONSTRAINT ck_park_lat_park                 CHECK(lat_park >=-90 and lat_park <= 90),
    long_park                   NUMBER(10,6)        CONSTRAINT nn_park_long_park                NOT NULL,
                                                    CONSTRAINT ck_park_long_park                CHECK(long_park >=-180 and long_park <= 180),
    bike_capacity               INTEGER,
    scooter_capacity            INTEGER,
	elevation                   INTEGER             CONSTRAINT nn_park_elevation                NOT NULL,
                                                    CONSTRAINT ck_park_elevation                CHECK(elevation >= 0),
    park_input_voltage          INTEGER,
    park_input_current          INTEGER
)/

CREATE TABLE trip(
    trip_id                     INTEGER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT pk_rental_id_rental PRIMARY KEY,
                                                    CONSTRAINT ck_rental_id_bike             CHECK(trip_id >=0),
    username                    VARCHAR(100)        CONSTRAINT nn_trip_username              NOT NULL,
    vehicle_id                  VARCHAR(100)        CONSTRAINT nn_trip_vehicle_id            NOT NULL,
    park_id                     VARCHAR(100)        CONSTRAINT nn_trip_park_id               NOT NULL,
    ending_park                 VARCHAR(100),
    start_time                  TIMESTAMP           CONSTRAINT nn_trip_start_time            NOT NULL,
    end_time                    TIMESTAMP
)/

CREATE TABLE scooter(
    vehicle_id                  VARCHAR(100)        CONSTRAINT pk_scooter_vehicle_id            PRIMARY KEY,
    scooter_type                VARCHAR(50)         CONSTRAINT nn_scooter_scooter_type          NOT NULL,
                                                    CONSTRAINT ck_scooter_scooter_type          CHECK ( REGEXP_LIKE(scooter_type, 'CITY || OFF-ROAD') ),
    max_battery                 NUMBER(10,2)        CONSTRAINT nn_scooter_max_battery           NOT NULL,
    actual_battery              NUMBER(5,2)         CONSTRAINT ck_scooter_actual_battery        CHECK(actual_battery BETWEEN 0 AND 100),
    motor                       INTEGER             CONSTRAINT nn_scooter_motor                 NOT NULL,
    lock_time                   TIMESTAMP
)/

CREATE TABLE bicycle(
    vehicle_id                  VARCHAR(100)        CONSTRAINT pk_bicycle_vehicle_id                PRIMARY KEY,
    wheel_size                  INTEGER             CONSTRAINT nn_bicycle_wheel_size                NOT NULL
)/

CREATE TABLE pois(
    point_id                    VARCHAR(100)        CONSTRAINT pk_pois_point_id                     PRIMARY KEY,
    lat_poi                     NUMBER(10,6)        CONSTRAINT nn_pois_lat_poi                      NOT NULL,
                                                    CONSTRAINT ck_pois_lat_poi                      CHECK(lat_poi >=-90 and lat_poi <= 90),
    long_poi                    NUMBER(10,6)        CONSTRAINT nn_pois_long_poi                     NOT NULL,
                                                    CONSTRAINT ck_pois_long_poi                     CHECK(long_poi >=-180 and long_poi <= 180),
    elevation                   INTEGER             CONSTRAINT nn_pois_elevation                    NOT NULL,
													CONSTRAINT ck_pois_elevation           			CHECK(elevation >= 0),
    point_description           VARCHAR(200)
)/

CREATE TABLE paths(
    id_location1                VARCHAR(100),
    id_location2                VARCHAR(100),
    kinetic_coefficient         NUMBER(5,3),
    wind_direction              INTEGER,
    wind_speed                  NUMBER(10,1),
    CONSTRAINT pk_paths PRIMARY KEY (id_location1, id_location2)
)/

--PATHS
ALTER TABLE paths       ADD CONSTRAINT fk_paths_id_location1        FOREIGN KEY (id_location1)      REFERENCES locations(id_location)/
ALTER TABLE paths       ADD CONSTRAINT fk_paths_id_location2        FOREIGN KEY (id_location2)      REFERENCES locations(id_location)/

--BICYCLE
ALTER TABLE bicycle     ADD CONSTRAINT fk_bicycle_vehicle_id        FOREIGN KEY (vehicle_id)        REFERENCES vehicle (vehicle_id)/

--SCOOTER
ALTER TABLE scooter     ADD CONSTRAINT fk_scooter_vehicle_id        FOREIGN KEY (vehicle_id)        REFERENCES vehicle (vehicle_id)/

--TRIP
ALTER TABLE trip        ADD CONSTRAINT fk_trip_username             FOREIGN KEY (username)          REFERENCES registered_users(username)/
ALTER TABLE trip        ADD CONSTRAINT fk_trip_vehicle_id           FOREIGN KEY (vehicle_id)        REFERENCES vehicle(vehicle_id)/
ALTER TABLE trip        ADD CONSTRAINT fk_trip_park_id              FOREIGN KEY (park_id)           REFERENCES locations(id_location)/

--PARK
ALTER TABLE park        ADD CONSTRAINT fk_park_park_id              FOREIGN KEY (park_id)           REFERENCES locations(id_location)/

--POIS
ALTER TABLE pois        ADD CONSTRAINT fk_pois_point_id             FOREIGN KEY (point_id)          REFERENCES locations(id_location)/

--INVOICE
ALTER TABLE invoice     ADD CONSTRAINT fk_invoice_username          FOREIGN KEY (username)          REFERENCES registered_users(username)/

--VEHICLE
ALTER TABLE vehicle     ADD CONSTRAINT fk_vehicle_park_id           FOREIGN KEY (park_id)           REFERENCES locations(id_location)/
